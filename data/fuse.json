{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title"},{"path":["body"],"id":"body","weight":1,"src":"body"}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"root","n":1},"1":{"v":"\n# Root\n\nThis is the root fo your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top. \n","n":0.16}}},{"i":2,"$":{"0":{"v":"Vscode","n":1}}},{"i":3,"$":{"0":{"v":"Ext","n":1}}},{"i":4,"$":{"0":{"v":"Simplevim","n":1},"1":{"v":"\n# SimpleVim\n\nAn opinionated Vim-like extension for VSCode that prioritizes simplicity (of use and implementation) and integration with native VSCode features.\n\nOnce you enter Insert mode it will be a completely vanilla VSCode experience: the only event SimpleVim will listen for is the `Escape` key to go back to Normal mode.\n\n_Reference: https://marketplace.visualstudio.com/items?itemName=jpotterm.simple-vim_\n\n\n## Operators\n\nOperators act on a range of text. In Normal mode the range is specified by the OperatorRange typed after the operator. In Visual mode it is the visual selection.\n\n| Keys | Description |\n|-|-|\n| `d` | Delete range. |\n| `c` | Delete range and enter insert mode. |\n| `y` | Yank range. |\n| `r` | Yank and delete range. |\n| `s` | Select range and enter Visual mode. |\n\n\n## OperatorRanges\n\nOperatorRanges select a range for an Operator to act on. They must be used in Normal mode by typing an Operator and then an OperatorRange.\n\n| Keys | Description |\n|-|-|\n| `l` | Character under cursor. |\n| `h` | Character to the left of cursor. |\n| `k` | Current line and line above. |\n| `j` | Current line and line below. |\n| `w` | From cursor to beginning of next word. |\n| `W` | From cursor to beginning of next word (including punctuation). |\n| `b` | From cursor to beginning of previous word. |\n| `B` | From cursor to beginning of previous word (including punctuation). |\n| `e` | From cursor to end of next word. |\n| `E` | From cursor to end of next word (including punctuation). |\n| `iw` | Word under cursor. |\n| `iW` | Word (including punctuation) under cursor. |\n| `aw` | Word under cursor and whitespace after. |\n| `aW` | Word (including punctuation) under cursor and whitespace after. |\n| `f<char><char>` | From cursor to next occurrence (case sensitive) of <char><char>. |\n| `F<char><char>` | From cursor to previous occurrence (case sensitive) of <char><char>. |\n| `t<char>` | From cursor to next occurrence (case sensitive) of <char>. |\n| `T<char>` | From cursor to previous occurrence (case sensitive) of <char>. |\n| `gg` | From current line to first line of the document. |\n| `G` | From current line to last line of the document. |\n| `}` | From current line to beginning of next paragraph. |\n| `{` | From current line to beginning of previous paragraph. |\n| `ip` | Current paragraph. |\n| `ap` | Current paragraph and whitespace after. |\n| `i<bracket>` | Inside the matching `<bracket>`s. Where `<bracket>` is a quote or opening bracket character (any of ``'\"`({[<``).  |\n| `a<bracket>` | Outside the matching `<bracket>`s. Where `<bracket>` is a quote or opening bracket character (any of ``'\"`({[<``). |\n| `it` | Inside XML tag. |\n| `at` | Outside XML tag. |\n| `ii` | Inside indentation level. |\n\n\n## Motions\n\nMotions move the cursor and can be used in Normal or Visual mode. In Visual mode they only move one side of the selection; the other side stays anchored to where it was when you entered Visual mode.\n\n| Keys | Description |\n|-|-|\n| `l` | Character right. |\n| `h` | Character left. |\n| `k` | Line up. |\n| `j` | Line down. |\n| `w` | Word right. |\n| `W` | Word (including punctuation) right. |\n| `b` | Word left. |\n| `B` | Word (including punctuation) left. |\n| `e` | Word end right. |\n| `E` | Word end (including punctuation) right. |\n| `f<char><char>` | Next occurrence (case sensitive) of <char><char>. |\n| `F<char><char>` | Previous occurrence (case sensitive) of <char><char>. |\n| `t<char>` | Next occurrence (case sensitive) of <char>. |\n| `T<char>` | Previous occurrence (case sensitive) of <char>. |\n| `gg` | First line of the document. |\n| `G` | Last line of the document. |\n| `}` | Down a paragraph. |\n| `{` | Up a paragraph. |\n| `$` | End of line. |\n| `_` | Beginning of line. |\n| `H` | Top of screen. |\n| `M` | Middle of screen. |\n| `L` | Bottom of screen. |\n\n\n## Actions\n\nActions are miscellaneous commands that don't follow the well-defined patterns of Operators, OperatorRanges, or Motions.\n\n| Keys | Description |\n|-|-|\n| `i` | Enter Insert mode. |\n| `I` | Move to beginning of line and enter Insert mode. |\n| `a` | Move one character to the right and enter Insert mode. |\n| `A` | Move to end of line and enter Insert mode. |\n| `v` | Enter VisualCharacter mode. |\n| `V` | Enter VisualLine mode. |\n| `Escape` | Enter Normal mode. |\n| `o` | Insert line below and enter insert mode. |\n| `O` | Insert line above and enter insert mode. |\n| `p` | Put yanked text after cursor. |\n| `P` | Put yanked text before cursor. |\n| `gp` | Select the result of the last `p` or `P` actions and enter Visual mode. |\n| `u` | Undo. |\n| `Ctrl+r` | Redo. |\n| `dd` | Delete current line. |\n| `D` | Delete to the end of the line. |\n| `cc` | Delete current line and enter Insert mode. |\n| `C` | Delete to the end of the line and enter Insert mode. |\n| `yy` | Yank current line. |\n| `Y` | Yank to the end of the line. |\n| `rr` | Yank current line and delete it. |\n| `R` | Yank to the end of the line and delete it. |\n| `ss` | Select current line. |\n| `S` | Select to the end of the line. |\n| `x` | Delete character. |\n| `zt` | Scroll so that cursor is at the top of the screen. |\n| `zz` | Scroll so that cursor is in the middle of the screen. |\n| `zb` | Scroll so that cursor is at the bottom of the screen. |\n| `Ctrl+d` | Scroll down half page. |\n| `Ctrl+u` | Scroll up half page. |\n| `Ctrl+f` | Scroll down full page. |\n| `Ctrl+b` | Scroll up full page. |\n| `;` | Repeat the last `f`, `F`, `t` or `T` motion forward. |\n| `,` | Repeat the last `f`, `F`, `t` or `T` motion backward. |\n\n\n## Differences From Vim\n\nSimpleVim prioritizes simplicity and integration with native VSCode features over compatability with Vim. If full Vim compatibility is important to you, consider trying a different extension. Here are some of the ways SimpleVim is different from Vim.\n\n- SimpleVim has no macros. Instead it has first class multiple cursor support which you can use to achieve something similar. You can place additional cursors by any of the ways native to VSCode including: `Cmd+d`, `Cmd+Alt+Down` or `Alt+Click`. Simply place cursors everywhere you would have run the macro and see your changes to each place in real time.\n\n- SimpleVim has no `.` (repeat) command. Use multiple cursors instead (see previous bullet).\n\n- SimpleVim has no count. In Vim you can prefix commands with a number and it will run them that many times. In SimpleVim that is not supported. Instead you can just type the command again or use a command that accomplishes your goal with fewer repetitions.\n\n- SimpleVim lets the cursor go one past the last character of the line in Normal mode. It would be nice to prevent this, but because of VSCode's selection model and extension API there is no good way to do it. It would require ugly hacks and would make other parts of the SimpleVim experience buggy.\n\n- SimpleVim has no registers. Instead the operators have been modified so deleting text does not overwrite the text you yanked. A new `r` operator has been added for when you want to yank and delete text at the same time.\n\n- SimpleVim's `f` and `t` motions work slightly differently from Vim's. `t` and `f` behave like Vim's `/` command, but `t` takes one character and `f` takes two. Or in other words, `t` works like Vim's `t` in Normal mode but Vim's `f` in Visual mode. And `f` behaves like the vim-sneak plugin.\n\n- SimpleVim has no `/` (search) command. Instead you can either use the `f` motion or the native VSCode find. Between them most of the uses for `/` are taken care of.\n\n- SimpleVim has no `>` (indent) command. Instead you can use VSCode's `Cmd+]`.\n\n- SimpleVim has no `gU` (uppercase) command. Instead you can use VSCode's `Transform to Uppercase` from the Command Palette.\n\n- SimpleVim has no jump list (`Ctrl+o` and `Ctrl+i` in Vim). Instead you can use VSCode's native jump list with `Ctrl+-` and `Ctrl+_`.\n\n- SimpleVim does not support marks. If you're jumping back and forth often between two places in a file you can use VSCode's split window feature, and use `Cmd+1` and `Cmd+2` to focus them. If you just need to jump back to where you've been, you can use VSCode's `Ctrl+-`.\n\n\n## Settings\n\nThe `y` (yank) operator temporarily changes the background color of the range being yanked to make it obvious what you're yanking. Otherwise you might not realize you yanked the wrong thing until you tried to put it somewhere else. You can change the background color it uses with the `simpleVim.yankHighlightBackgroundColor` setting.\na\n```json\n{\n    \"simpleVim.yankHighlightBackgroundColor\": \"#F8F3AB\"\n}\n```\n### Ctrl + F is overridden\nVSCode native search uses the same keybinding as `extension.simpleVim.scrollDownPage`.\nTo resolve this just remove the keybinding in the vscode keybind settings.\n","n":0.026}}},{"i":5,"$":{"0":{"v":"Scratch","n":1}}},{"i":6,"$":{"0":{"v":"Pi","n":1}}},{"i":7,"$":{"0":{"v":"Setup","n":1},"1":{"v":"\n# Setting up the Raspberri Pi\n\n## Setup Steps\n- Flash SD card\n- Enable ssh following the instructions below\n- Change password using `passwd` for the pi user\n- Set the country using `raspi-config` in the locale options select `en_GB.UTF-8` and `en_US.UTF-8`\n- Install vim `sudo apt install vim`\n- Install docker \n\n## Enable SSH\nSSH is disabled by default, enable this by adding an empty file named `ssh` to the boot partition of the SD card (this is the only folder that will appear to Windows)\n\n## Installing Docker\n1. Update and upgrade `sudo apt-get update && sudo apt-get upgrade -y`\n2. Download install script `curl -fsSL https://get.docker.com -o get-docker.sh` and execute `sudo sh get-docker.sh`\n3. Add `pi` user to the docker group `sudo usermod -aG docker pi` (log out and in for changes to take place)\n4. Check docker version and info: `docker version` and `docker info`\n5. Run hello world test container `docker run hello-world`\n\n## Uninstalling Docker\nDelete using package manager: \n`sudo apt-get purge docker-ce`\nRemove leftover images, containers, volumes and other data: \n`sudo rm -rf /var/lib/docker`\n","n":0.078}}},{"i":8,"$":{"0":{"v":"Net","n":1},"1":{"v":"\n# Network stuff\n\n```sh\ndzdo sh -c  firewall-cmd\n\ndzdo sh -c \"firewall-cmd --zone=public --add-port=1111/tcp\"\n\nnohup python -m SimpleHTTPServer 1111 &\npython -m SimpleHTTPServer 1111\n\ndzdo sh -c \"su -\"\n\niptables -t nat -A PREROUTING -p tcp --dport 8888 -j REDIRECT --to-port 3860\n```\n\n## Test connections\n```sh\n# Connection successful:\n$ timeout 1 bash -c 'cat < /dev/null > /dev/tcp/google.com/80'; echo $?\n0\n\n# Connection failure prior to the timeout\n$ timeout 1 bash -c 'cat < /dev/null > /dev/tcp/google.com/80'\nbash: google.com: Name or service not known\nbash: /dev/tcp/google.com/80: Invalid argument\n$ echo $?\n1\n\n# Connection not established by the timeout\n$ timeout 1 bash -c 'cat < /dev/null > /dev/tcp/google.com/81'\n$ echo $?\n124\n\n# master one liner\nH=google.com; P=80; \\\ntimeout 1 bash -c \"cat < /dev/null > \\\"/dev/tcp/${H}/${P}\\\" \"; RC=$?; \\\n[ \"${RC}\" == \"0\" ] && echo \"${RC}: Connection successful\"; \\\n[ \"${RC}\" == \"1\" ] && echo \"${RC}: Connection failure prior to the timeout\"; \\\n[ \"${RC}\" == \"124\" ] && echo \"${RC}: Connection not established by the timeout\"; \\\n[ \"${RC}\" != \"0\" -a \"${RC}\" != \"1\" -a \"${RC}\" != \"124\" ] && echo \"${RC}: unknown result code\";\n","n":0.078}}},{"i":9,"$":{"0":{"v":"Ip","n":1},"1":{"v":"\n# IP Address\nStuff about IP Address and setting the configuration\n\n## Static IP Address\nSetting a static IP addres will ensure that the server will use the same IP address all the time.\n### Get Current IP Address\n```sh\nhostname -I\n```\n\n### Set a Static IP Address\nEdit `/etc/network/interfaces` command and set your configuration\n#### Example\n```sh\nauto eth0\niface eth0 inet static\n        address 192.168.1.100 # current device ip\n        netmask 255.255.255.0\n        gateway 192.168.1.1 # modem gateway\n```\n\n#### Example using /etc/dhcpcd.conf\n```sh\ninterface eth0\n\nstatic ip_address=192.168.208.103/24\nstatic routers=192.168.208.1\nstatic domain_name_servers=8.8.8.8\n```\n\n\n### Connecting 2 routers together, one as DumbAP\n_Reference: https://openwrt.org/docs/guide-user/network/wifi/dumbap_\n","n":0.112}}},{"i":10,"$":{"0":{"v":"Lang","n":1}}},{"i":11,"$":{"0":{"v":"Puml","n":1},"1":{"v":"\n# PlantUML\n\n## Component Diagrams\n\n### Shapes\n```puml\n@startuml\ncomponent \"A\" as a\nnode \"B\" as b\ninterface \"C\" as c\n@enduml\n```\n\n### Styling\nColours for classes\n```sh\ncomponent \"A\" as a <<push>>\nskinparam component {\n  backgroundColor<<push>> #95e683\n}\n```\n```puml\n@startuml\ncomponent \"A\" as a <<push>>\nskinparam component {\n  backgroundColor<<push>> #95e683\n}\n@enduml\n```\n\n## Formatting\nhttps://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html\n","n":0.171}}},{"i":12,"$":{"0":{"v":"Mermaid","n":1},"1":{"v":"\n# Mermaid\n\n## Syntax\n\n### Flow Chart\n```mermaid\ngraph LR\nA --> B\n```\n#### Shapes\nDefault is square for a node\n\nCylinder\n```sh\nid1[(This is the text in the cylinder)]\n```\n\nCircles\n```\nid1((This is the text in the circle))\n```\n\n#### Links\nSolid Line\n```sh\nA --> B\n```\nOpen Line\n```sh\nA --- B\n```\nText on links\n```sh\nA-- This is the text! ---B\n```\n#### Styling\n\n##### Links\nLinks have no id, so the order of the number of link is defined instead\n```sh\nlinkStyle 3 stroke:#ff3,stroke-width:4px,color:red;\n```\n##### Nodes\n\n```sh\nclassDef push fill:#95e683;\nApp:::push\n```\n\n## References\n_https://mermaid-js.github.io/mermaid/diagrams-and-syntax-and-examples/_\n","n":0.127}}},{"i":13,"$":{"0":{"v":"Markdown","n":1},"1":{"v":"\n# Markdown\n\n## Syntax\n\n### Phrase emphasis\n`*italic* and **bold**`\n*italic* and **bold**\n\n---\n\n### Links\n**Inline** (titles are options):\n`Some [linked text](http://squarespace.com/ \"Title\").`\nSome [linked text](http://squarespace.com/ \"Title\").\n\n---\n\n### Superscript and subscript\n**Superscript**\n`E=MC<sup>2</sup>`\nE=MC<sup>2</sup>\n\n**Subscript**\n`Plants need CO<sub>2</sub>`\nPlants need CO<sub>2</sub>\n\n---\n\n### Images\n**Inline** (titles are options):\n`![alt text](/path/img.jpg \"Title\")`\n![alt text](/path/img.jpg \"Title\")\n\n---\n\n### Headings\n```\n# Heading 1\n\n## Heading 2\n```\n# Heading 1\n\n## Heading 2\n\n---\n\n### Lists\n**Ordered**, without paragraphs:\n```\n1. Foo\n2. Bar\n```\n1. Foo\n2. Bar\n\n**Unordered**, with paragraphs:\n```\n* A list item.\nWith multiple paragraphs.\n* Bar\n```\n* A list item.\nWith multiple paragraphs.\n* Bar\n\nNested:\n```\n* Abacus\n    *absolute\n* Bananas\n    1. bitter\n    2. bupkis\n    3. burper\n* Cunning\n```\n\n* Abacus\n    *absolute\n* Bananas\n    1. bitter\n    2. bupkis\n    3. burper\n* Cunning\n\n---\n\n### Blockquotes\n```\n> Email-style angle brackets are used for blockquotes.\n>> You can also nest them.\n>>\n> * You can quote a list.\n> * Etc.\n\n> To break the nested blockquote, add a space between lines.\n\nAdd another line to resume regular paragraph text.\n```\n> Email-style angle brackets are used for blockquotes.\n>> You can also nest them.\n>>\n> * You can quote a list.\n> * Etc.\n\n> To break the nested blockquote, add a space between lines.\n\nAdd another line to resume regular paragraph text.\n\n---\n\n### Code spans\n```\n`<code>` spans are delimited by backticks.\nYou can include literal backticks like `` `this` ``.\n```\n`<code>` spans are delimited by backticks.\nYou can include literal backticks like `` `this` ``.\n\n---\n\n### Preformatted code blocks\nUse ` ``` ` to surround code blocks.\n\n---\n\n### Horizontal rules\nThree or more dashes or asterisks:\n```\n    ---\n\n    ***\n\n    - - - -\n```\n\n### Manual line breaks\nEnd a line with two or more spaces: \n```\nRoses are red,  \nViolets are blue.\n```\nRoses are red,  \nViolets are blue.\n\n---\n\n### Text colors and fonts\n`In his beard lived three <span style=\"color:red\">cardinals</span>.`\nIn his beard lived three <span style=\"color:red\">cardinals</span>.\n`I am in <span style=\"font-family:Papyrus; font-size:4em;\">LOVE!</span>`\nI am in <span style=\"font-family:Papyrus; font-size:1em;\">LOVE!</span>\n\n","n":0.062}}},{"i":14,"$":{"0":{"v":"Erlang","n":1},"1":{"v":"\n# Erlang\n\n## tail recursive efficiency\n- Use foldr for simple building of lists (even if it needs reversing)\n- simple building of lists i.e. size N input, size N output\n- summary of references\n  - foldr is generally faster as it avoids lists:reverse and uses the heap space it creates for all processing\n  - foldl will be slower, if it needs a lists:reverse as we duplicate the memory allocation for the new list then use processing to garbage collect original list.\n  - foldl will always be faster if a lists:reverse is not needed i.e. we don't care about order \n\n_References_\nhttp://erlang.2086793.n4.nabble.com/Efficiency-of-a-list-construction-td3538122.html#a3538379\nhttps://ferd.ca/erlang-s-tail-recursion-is-not-a-silver-bullet.html\n\n## Implementation of Erlang Maps\n- https://medium.com/@jlouis666/breaking-erlang-maps-1-31952b8729e6\n- uses sorted array http://www.mathcs.emory.edu/~cheung/Courses/323/Syllabus/Map/ordered-map.html\n\n## Advanced stuff about list sizes and sharing\n_Reference: http://erlang.org/doc/efficiency_guide/processes.html_\n\n## GB Tree stuff\n_Reference: http://erlang.2086793.n4.nabble.com/gb-trees-and-dict-performance-td4715001.html_\n\n## When to use ok tuple\n```erlang\n-spec {ok, some_value} || {error, reason}\n```\n_Reference: https://medium.com/@bruno_sapienza/when-to-return-the-ok-in-elixir-10c3c336870#:~:text=it's%20common%20to%20return%20tagged,related%20value(s)%20like%20the_\n\n## Data Comparisons\nhttps://www.theerlangelist.com/article/sequences\n\n## try catch vs catch\ncatch will always generate a stacktrace when catching an exception, so it slower, than try.\ntry avoids building a stacktrace if you don't ask for it\nhttps://www.programmersought.com/article/91291342145/\n\n## Good resources\nhttps://adoptingerlang.org/docs/cheat_sheets/\nhttp://beam-wisdoms.clau.se/en/latest/\n\n## ETS Scalability\nhttps://www.researchgate.net/publication/262172496_On_the_scalability_of_the_Erlang_term_storage\nhttp://blog.erlang.org/the-new-scalable-ets-ordered_set/#benchmark\n\n## Behaviours\nNot all OTP behaviours are listed here, only thee most frequently-used ones.\n\n### Applications\n|Trigger|Called By|Handled By|Return|Description\n|---|---|---|---|---|\n|`application:start/1-2`|client or booting VM|`start(Type, Args)`|<code>{ok, pid()} &#124; {ok, pid(), State}</code>|should start the root supervisor\n|`{start_phases, [{Phase, Args}]}` in app file|kernel booting the app|`start_phase(Phase, Type, Args)`|<code>ok &#124; {error, Reason}</code>|Optional. Can isolate specific steps of initialization\n|`application:stop/1`|app shutting down|`prop_stop(State)`|`State`|Optional. Called before the supervision tree is shut down\n|`application:stop/1`|app shutting down|`stop(State)`|`term()`|called once the app is done running to clean things up\n|Hot code update|SASL’s release handler|`config_change(Changed::[{K,V}], New::[{K,V}], Removed::[K])`|`ok`|Called after a hot code update using the VM’s relup functionality, if the configuration values changed\n\n### Supervisors\n|Trigger|Called By|Handled By|Return|Description\n|---|---|---|---|---|\n|`supervisor:start_link/2-3`|parent process|`init(Arg)`|<code>ignore &#124; {ok, {SupFlag, [Child]}}</code>|Specifies a supervisor. Refer to official documentation\n\n### gen_server\n|Trigger|Called By|Handled By|Return|Description\n|---|---|---|---|---|\n|`gen_server:start_link/3-4`|supervisor|`init(Arg)`|<code>{ok, State [, Option]} &#124; ignore &#124; {stop, Reason}</code>|Set up the initial state of the process\n|`gen_server:call/2-3`|client|`handle_call(Msg, From, State)`|<code>{Type::reply &#124; noreply, State [, Option]} &#124; {stop, Reason [, Reply], State}</code>|Request/response pattern. A message is received and expects an answer\n|`gen_server:cast/2`|client|`handle_cast(Msg, State)`|<code>{noreply, State [, Option]} &#124; {stop, Reason, State}</code>|Information sent to the process; fire and forget\n|`Pid ! Msg`|client|`handle_info(Msg, State)`|same as `handle_cast/2`|Out-of-band messages, including monitor signals and `'EXIT'` messages when trappig exit\n|Setting an Option value to `{continue, Val}`|the server itself|`handle_continue(Val, State)`|same as `handle_cast/2`|Used to break longer operations into triggerable internal events\n|`gen_server:stop/1,3`|client or supervisor|`terminate(Reason, State)`|`term()`|Called when the process is shutting down willingly or through errors. If the process does not trap exits, this callback may be omitted\n|`sys:get_status/2-3`, crash logs|client, the server itself|<code>format_status(normal &#124; terminate, [PDict, State])</code>|<code>[{data, [{\"State\", Term}]}]</code>|Used to add or remove information that would make it to debugging calls or error logs\n|N/A|supervisor|`code_change(OldVsn, State, Extra)`|`{ok, NewState}`|called to update a stateful process if the proper instructions are given during a hot code upgrade with releases\n### gen_statem\n#### Process management\n|Trigger|Called By|Handled By|Return|Description\n|---|---|---|---|---|\n|`gen_statem:start_link/3-4`|supervisor|`init(Arg)`| <code>{ok, State, Data [, Actions]} &#124; ignore &#124; {stop, Reason}</code>|Sets the initial state and data for the state machine\n|N/A|internal|`callback_mode()`|<code>[state_functions &#124; handle_event_function [, state_enter]]</code>|Defines the type of FSM and whether entering a state triggers a special internal event\n|`gen_statem:stop/1,3`|client or supervisor|`terminate(Reason, State, Data)`|`term()`|Called when the process is shutting down willingly or through errors. If the process does not trap exits, this callback may be omitted\n|`sys:get_status/2-3`, crash logs|client, the server itself|<code>format_status(normal &#124; terminate, [PDict, State, Data])</code>|`[{data, [{\"State\", Term}]}]`|Used to add or remove information that would make it to debugging calls or error logs\n|N/A|supervisor|`code_change(OldVsn, State, Data, Extra)`|`{ok, NewState, NewData}`|called to update a stateful process if the proper instructions are given during a hot code upgrade with releases\n\n#### State handling and transitions\nHandled by either `handle_event/4` or `StateName/3` functions, based on the value of `callback_mode()`. \nThe function signatures are either:\n* `handle_event(EventType, EventDetails, State, Data)`\n* `State(EventType, EventDetails, Data)`\n\nIf the value of `State` is not a list, even though `callback_mode()` defined `state_functions`, then `handle_event/4` will be called. All possible return values for either functions are one of:\n* `{next_state, State, Data}`\n* `{next_state, State, Data, [Actions, ...]}`\n* `{stop, Reason, Data}`\n* `{stop, Reason, Data, [Actions, ...]}`\n\nVarious short forms exist, such as `keep_state_and_data`, `{keep_state, Data}`, `{repeat_state, Data}`, and many more. Refer to the documentation for their content.\n\nThe `Actions` value is any combination of the following list (non-inclusive): `postpone`, `{next_event, EventType, EventDetails}`, `hibernate`, `{timeout, Delay, EventDetails}`, `{state_timeout, Delay, EventDetails}`, `{reply, From, Reply}`. Consult the documentation for more options.\n\n|Trigger|Called By|Event Type|Event Details|Description\n|---|---|---|---|---|\n|`gen_statem:call/2-3`|client|`{call, From}`|`term()`|Request/response pattern. A message is received and is expected to receive an answer\n|`gen_statem:cast/2`|client|`cast`|`term()`|Information must be sent to the process; fire and forget\n|`Pid ! Msg`|client|`info`|`Msg`|Out-of-band messages, including monitor messages and 'EXIT' signals that are trapped\n|`{timeout, T, Msg}`|`Action` return value|`timeout`|`Msg`|A specific timeout that can be set and received internally when the state machine has not received a new event in `T` milliseconds\n|`{state_timeout, T, Msg}`|`Action` return value|`state_timeout`|`Msg`|A specific timeout that can be set and received internally when the state machine has not transitioned to a new different state in T milliseconds\n|`{next_event, internal, Msg}`|`Action` return value|`internal`|`Msg`|Internal messages that can be generated by a state machine wanting to trigger itself without looking like external calls\n\n## Interpreting erl_crash dump\n_Reference: http://erlang.org/doc/apps/erts/crash_dump.html_\n\n## Docker erlang stuff\n\n### run erlang using docker container\n```sh\ndocker run -it --rm --name erlang-inst1 -v \"$PWD\":/usr/src/myapp -w /usr/src/myapp erlang:23-alpine erl\n```\n","n":0.035}}},{"i":15,"$":{"0":{"v":"Test","n":1},"1":{"v":"\n# Erlang Tests\n\n\n## CT Suites\n```\nRun a single CT test which is defined in a group\n    - make ct-http t=http_compress:headers_dupe\n\nRun a single CT test if there are no groups\n    - make ct-http c=headers_dupe\n```\n\n## EUnit\n\n\n## Test Tips\nhttps://medium.com/erlang-battleground/the-missing-testing-tip-628686ebbbda\n\n## Config\nTest if valid erlang config\n```sh\n\nfind target -type f -name \"*sys.config\"  | \\\nls _rel/config/dte_web_com/dte/releases/config/*.config | erl -noshell -eval '\n    Input = list_to_binary(io:get_chars(\"\", 1000000)),\n    Files = binary:split(Input, [<<\"\\n\">>, <<\" \">>], [global, trim_all]),\n    io:format(\"Testing File ~p~n\",[Files]),\n    CheckFun = \n        fun(FileName) ->\n            case file:consult(FileName) of\n                {ok,_} ->\n                    io:format(\"Erlang config '~p' - OK~n\",[FileName]);\n                {error, {Line, _Mod, Reason}} ->\n                    io:format(\"Unable to parse ~p at line ~p with reason ~p~nINVALID CONFIG~n\", [FileName, Line, Reason]),\n                    halt(1);\n                _ ->\n                    io:format(\"Unable to parse ~p ~nINVALID CONFIG~n\", [FileName]),\n                    halt(1)\n            end\n        end,\n    [CheckFun(File) || File <- Files]\n' -eval 'init:stop()'\n```\n","n":0.091}}},{"i":16,"$":{"0":{"v":"Syntax","n":1},"1":{"v":"\n# Syntax\n\n## Modules\n```erlang\n%%% This is a module-level comment\n%%% @doc This tag includes officiel EDoc documentation.\n%%% It can be useful for people to consule\n%%% @end\n%%% Generate documentation with rebar3 edoc\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%% Let's start with Module Attributes %%%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n%% This is an attribute or function-specific comment\n%% attributes start with a `-', functions with letters.\n%% This file should be saved as `sample.erl'\n-module(sample).\n\n%% Functions are described in the form Name/Arity, and must\n%% be exported through an `-export([...]).' module attribute\n-export([f/0, f/1]).\n-export([x/0]).         % multiple export attributes can exist\n\n%% You can \"import\" functions from another module, but\n%% for clarity's sake (and because there's no namespaces)\n%% nobody really does that\n-import(module, [y/0]).\n\n%% .hrl files contain headers, and are imported directly\n%% within the module.\n%% The following includes a private header file from src/\n%% or a public header file from include/ in the current app\n-include(\"some_file.hrl\").\n%% The following includes a public header file from the\n%% include/ file of another application\n-include_lib(\"appname/include/some_file.hrl\").\n\n%% specify an interface you implement:\n-behaviour(gen_server).\n\n%% Define a record (a tuple that compilers handles in a\n%% special way)\n-record(struct, {key = default :: term(),\n\t\t other_key     :: undefined | integer()}).\n\n%% Just C-style macros\n-define(VALUE, 42).        % ?VALUE in this module becomes `42'\n-define(SQUARE(X), (X*X)). % function macro\n-define(DBG(Call),         % a fancy debug macro: ?DBG(2 + 2)\n\tio:format(\"DBG: ~s (~p): ~p~n\",\n\t\t  [??Call, {?MODULE, ?LINE}, Call])).\n\n%% Conditionals\n-ifdef(MACRO_NAME).        % opposite: -ifndef(MACRO_NAME).\n-define(OTHER_MACRO, ok).\n-else.                     % other option: -elif(NAME).\n-define(MACRO_NAME, ok).\n-endif.\n\n%% Type definitions\n-type my_type() :: number() | boolean().\n-type my_container(T) :: {[T], [T], my_type(), mod:type()}\n-export_type([my_type/0, my_container/1]).\n\n%% you can also define custom attributes:\n-my_attribute(hello_there).\n-author(\"Duke Erlington\").\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%% And now modules for code and functions %%%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n%% @doc A function with 0 arguments returning an atom\n-spec f() -> term(). % optional spec\nf() -> ok.\n\n-spec f(number()) -> float().\nf(N) -> N + 1.0.\n\n%% Pattern matching with clauses\nx([]) -> [];  % base recursive clause for a list\nx([_H|T] -> [x | T]. % replace list element with `x' atom\n\n%% @private variable binding rules\nsame_list(X = [_|_], X) -> true;\nsame_list([], []) -> true;\nsame_list(_, _) -> false.\n\n%% Operators in the language\noperators(X, Y) ->\n    +X, -Y, % unary\n    X + Y, X - Y, X * Y, X / Y,   % any numbers\n    X div Y, X rem Y,             % integers-only\n    X band Y, X bor Y, X bxor Y,  % binary operators\n    X bsl Y, X bsr L,             % bit shifting\n    not X,                        % boolean not\n    X andalso Y, X orelse Y,      % shortcircuit boolean operators\n    X < Y, X > Y, X >= Y, X =< Y, % comparison\n    X == Y, X /= Y,               % equality (float == int)\n    X =:= Y, X =/= Y,             % strict equality (float =/= int)\n    X ++ Y, X -- Y,               % append Y to X, delete Y from X\n    X ! Y.                        % send message Y to process X\n\n%% Using guards. Valid guard expressions at:\n%% erlang.org/doc/reference_manual/expressions.html#guard-sequences\ncomfortable({celsius, X}) when X >= 18, X =< 26 -> % AND clauses\n    true;\ncomfortable({celsius, _}) ->\n    false.\n\nincomfortable({celsius, X}) when X =< 18; X >= 26 -> % OR clauses\n    true;\nincomfortable({celsius, _}) ->\n    false.\n\n%% difference with 'andalso' and 'orelse'\nconds(X) when (is_number(X) orelse is_integer(X))\n\t       andalso X < 9 ->\n    %% equivalent (A AND B) OR C\n    true;\nconds(X) when is_number(X); is_integer(X), X < 9 ->\n    %% - parentheses impossible with , or ;\n    %% - equivalent to A OR (B AND C)\n    true;\nconds(T) when element(1, T) == celsius; is_integer(T) ->\n    %% element/2 extracts an element from a tuple. If `T' is\n    %% not a tuple, the call fails and `is_integer/1' is tried\n    %% instead\n    true;\nconds(T) when element(1, T) == celsius orelse is_integer(T) ->\n    %% this can never work: if element/2 fails, the whole\n    %% `orlese' expressoin fails and `is_integer/1' is skipped\n    true.\n\n%% Conditionals\nconditional('if', Light) ->\n    if Light == red -> stop;\n       Light == green; Light == yellow -> go_fast;\n       true -> burnout % else clause!\n    end;\nconditional('case', {Light, IsLate}) ->\n    case Light of\n\tgreen -> go;\n\tyellow when IsLate -> go_fast;\n\t_ -> stop\n    end;\nconditional(pattern, green) -> go;\nconditional(pattern, yellow) -> slow;\nconditional(pattern, red) -> stop.\n\n%% List and binary comprehensions\ncomp(ListA, ListB) ->\n    [X*X || X <- ListA, X rem 2 == 0], % square even numbers\n    [{X,Y} || X <- ListA, Y <- ListB], % all possible pairs\n    << <<X:8>> || X <- ListA >>.       % turn list into bytes\ncomp(BinA, BinB) -> % now with binaries\n    << <<X*X:32>> || <<X:8>> <= Bin, X rem 2 == 0 >>,\n    [{X,Y} || <<X:32>> <= BinA, <<Y:8>> <= BinB],\n    [X || <<X:8>> <= BinA].\n\n%% Anonymous and higher order functions\nhigher_order() ->\n    If = fun(Light) -> conditional('if', Light) end,\n    Case = fun(Light) -> conditional('case', {Light, true}) end,\n    lists:map(If, [green, yellow, red]),\n    lists:map(Case, [green, yellow, red]),\n    If(red), % can be called literally\n    lists:map(fun(X) -> X*X end, [1,2,3,4,5]).\n\ntry_catch() ->\n    try\n\tsome_call(),     % exceptions in this call are caught as well\n\t{ok, val},       % common good return value to pattern match\n\t{error, reason}, % common bad return value to pattern match\n\t% any of these expression aborts the execution flow\n\tthrow(reason1), % non-local returns, internal exceptions\n\terror(reason2), % unfixable error\n\texit(reason3)   % the process should terminate\n    of  % this section is optional: exceptions here are not caught\n\t{ok, V} ->\n\t    do_something(V),\n\t    try_catch(); % safely recurse without blowing stack\n\t{error, R} ->\n\t    {error, R} % just return\n    catch % this section is optional: various patterns\n\tthrow:reason1 -> handled;\n\treason2 -> oops; % never matches, `throw' is implicit type\n\terror:reason2 -> handled;\n\texit:reason3 -> handled;\n\tthrow:_ -> wildcard_throws;\n\tE:R when is_error(E) -> any_error;\n\t_:_:S -> {stacktrace, S}; % extract stacktrace\n    after -> % this is an optional 'finally' block\n\tfinally\n    end.\n```\n\n## Processes and Signal\n```erlang\n%% Start a new process\nPid = spawn(fun() -> some_loop(Arg) end)\nPid = spawn('name@remote.host', fun() -> some_loop(Arg) end)\nPid = spawn(some_module, some_loop, [Arg])\nPid = spawn('name@remote.host', some_module, some_loop, [Arg])\n%% Spawn a linked process\nPid = spawn_link(...) % 1-4 arguments as with spawn/1-4\n%% Spawn a monitored process atomically\n{Pid, Ref} = spawn_monitor(fun() -> some_loop(Arg) end)\n{Pid, Ref} = spawn_monitor(some_module, some_loop, [Arg])\n%% Spawn with fancy options\nspawn_opt(Fun, Opts)\nspawn_opt(Node, Fun, Opts)\nspawn_opt(Mod, Fun, Args, Opts)\nspawn_opt(Node, Mod, Fun, Args, Opts)\n%% Options must respect the following spec; many are advanced\n[link | monitor |\n {priority, low | normal | high | max} |    % don't touch\n {fullsweep_after, integer() >= 0} |        % full GC\n {min_heap_size, Words :: integer() >= 0} | % perf tuning\n {min_bin_heap_size, Words} |\n {max_heap_size,                    % heap size after which\n   Words |                          % the process may be killed. Use\n   #{size => integer() >= 0,        % to indirectly set max queue sizes\n     kill => boolean(),\n     error_logger => boolean()}}\n\n%% send an exit signal to a process\nexit(Pid, Reason)\n\n%% Receive a message\nreceive\n    Pattern1 when OptionalGuard1 ->\n\tExpression1;\n    Pattern2 when OptionalGuard2 ->\n\tExpression2\nafter Milliseconds -> % optional\n    Expression\nend\n\n%% Naming processes\ntrue = register(atom_name, Pid)\ntrue = unregister(atom_name)\nPid | undefined = whereis(atom_name)\n\n%% Monitor\nRef = erlang:monitor(process, Pid)\ntrue = erlang:demonitor(Ref)\ntrue | false = erlang:demonitor(Ref, [flush | info])\n\n%% Links\nlink(Pid)\nunlink(Pid)\nprocess_info(trap_exit, true | false)\n```\n\n## Behaviours\n","n":0.031}}},{"i":17,"$":{"0":{"v":"Data","n":1},"1":{"v":"\n# Data Types\n\n|Name|Description|Dialyzer|Example Syntax|\n|-- | -- | -- | -- |-- |\n|integer|number without decimals|`integer(), pos_integer(), non_neg_integer()`|`1, 2, 3, -213, 16#01FF, 2#101011`|\n|float|number with decimals|`float()`|`1.0, -1.0, 123.12, 1.0e232`|\n|number|either floats or integers|`number()`|`1.0, 1`|\n|atom|literals, constants with their own name for value|`atom()`|`abc, 'abc', some_atom@erlang, 'atom with spaces'`|\n|boolean|atoms true or false|`boolean()`|`true, false`|\n|reference|unique opaque value|`reference()`|`make_ref()`|\n|fun|anonymous function|`fun(), fun((ArgType) -> RetType)`|<code>fun(X) -> X end, fun F(0) -> []; F(N) -> [1 &#124; F(N-1)] end</code>|\n|port|opaque type for a file descriptor|`port()`|`N/A`|\n|pid|process identifier|`pid()`|`<0.213.0>`|\n|tuple|group a known set of elements|`tuple(), {A, B, C}`|`{celcius, 42}, {a, b, c}, {ok, {X, Y}}`|\n|map|a dictionary of terms|`map(), #{KType => VType}, #{specific_key := VType}`|`#{a => b, c => d}, Existing#{key := Updated}`|\n|nil|an empty list|`[]`|`[]`|\n|list|recursive structure for a list of terms|`list(), [Type]`|<code>[a, b, c], [a &#124; [b &#124; [c &#124; []]]], \"a string is a list\"</code>|\n|binary|a flat byte sequence|`binary()`|`<<1,2,3,4>>, <<\"a string can be a binary\">>, <<X:Size/type, _Rest/binary>>`|\nTerm ordering: `number < atom < reference < fun < port < pid < tuple < map < nil < list < binary`\n","n":0.079}}},{"i":18,"$":{"0":{"v":"Journal","n":1},"1":{"v":"\n# Journal\n\nThe narrative of the days\n","n":0.408}}},{"i":19,"$":{"0":{"v":"Template","n":1}}},{"i":20,"$":{"0":{"v":"Daily","n":1},"1":{"v":"\n## Thoughts\n\n## Tasks\n- [ ]\n- [ ]\n- [ ]\n\n## 3 Things I'm Grateful For\n\n## 3 Good Things from the day\n\n","n":0.224}}},{"i":21,"$":{"0":{"v":"Daily","n":1},"1":{"v":"\n# Daily Journals\n","n":0.577}}},{"i":22,"$":{"0":{"v":"Cli","n":1}}},{"i":23,"$":{"0":{"v":"Wsl","n":1},"1":{"v":"\n# Windows Subsystem for Linux (WSL)\n\n## Common problems\n### ls: cannot access '/mnt/c': Input/output error\nRun the following command in Powershell to restart WSL:\n```powershell\nwsl.exe --shutdown\n```\n_Reference: https://github.com/microsoft/WSL/issues/4377_\n","n":0.204}}},{"i":24,"$":{"0":{"v":"Alpine","n":1},"1":{"v":"\n# Alpine\n\n## Setup\n```bash\n## VSCode\napk update && apk add libstdc++\n\n## Bash\napk update && apk upgrade && apk add bash\napk add bash-doc\napk add bash-completion\n\n## Set Bash as login shell\nvi /etc/passwd\n\n### Docker Desktop setup to WSL2\n## Install ca-certificates and wget\napk add ca-certificates wget\n\n## Download install package key\nwget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\n\n## Download package\nwget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.32-r0/glibc-2.32-r0.apk\n\n## Install package\napk add glibc-2.32-r0.apk\n\n## Set alpine as default wsl distro (run in powershell)\nwsl --set-default alpine\n\n## Install Docker Desktop (https://docs.docker.com/docker-for-windows/wsl/)\n\n## Install Docker CLI\napk add docker-cli\n\n## Install VIM\napk add vim\n\n## Dendron PlantUML Setup\napk add --no-cache graphviz ttf-droid ttf-droid-nonlatin\napk add openjdk11\n```\n\n","n":0.106}}},{"i":25,"$":{"0":{"v":"Vim","n":1},"1":{"v":"\n# VIM\n\n## Regex Replace\nFind each occurrence of 'foo' (in all lines), and replace it with 'bar'.\n```vim\n:%s/foo/bar/g\n```\nChange each 'foo' to 'bar', but ask for confirmation first.\n```vim\n:%s/foo/bar/gc\n```\nChange only whole words exactly matching 'foo' to 'bar'; ask for confirmation.\n```vim\n:%s/\\<foo\\>/bar/gc\n```\n\n## Navigation\n### Moving to matching braces\nThe `%` key can be used for the following :\n\nTo jump to a matching opening or closing parenthesis, square bracket or a curly brace: `([{}])`\nTo jump to start or end of a C-style comment: `/* */`.\nTo jump to a matching C/C++ preprocessor conditional: `#if`, `#ifdef`, `#else`, `#elif`, `#endif`.\nTo jump between appropriate keywords, if supported by the ftplugin file, for example, between `begin` and `end` in a Pascal program.\n\n\n## Pasting verbatim\nDo this so that pasting doesn't go weird, when it sees a comment\n```vim\n:set paste\n:set nopaste\n```\n","n":0.09}}},{"i":26,"$":{"0":{"v":"Tr","n":1},"1":{"v":"\n\n## TR bash command (Transform)\n\n```sh\n## Uppercase text\ntr [:lower:] [:upper:]\n```\n","n":0.333}}},{"i":27,"$":{"0":{"v":"Tmux","n":1},"1":{"v":"\n# Tmux\n\n## Enable CTRL keys temp\n```sh\nC-b :set-window-option xterm-keys on\n```\n","n":0.333}}},{"i":28,"$":{"0":{"v":"Tcpdump","n":1},"1":{"v":"\n# Tcpdump\n\n## Examples\n\n### Display traffic to and from a host\n```sh\ntcpdump -i any host 192.168.1.11\n```\n","n":0.267}}},{"i":29,"$":{"0":{"v":"Tar","n":1},"1":{"v":"\n# Overview\n- creates and manipulates streaming archive files\n\n![tar bomb](assets/2020-07-06-13-40-10.png)\n\n# Synopsis\n```\ntar [bundle-flags <args] [<file> | <pattern> ...]\n```\n# Options\n\n- -c: create new archive\n- -d: find difference bwt files in the archive\n- -v: verbose\n- -f: specify filename\n- -x: extract file\n- -j: Open up a bzip2 file\n- -z: file archive through gzip\n- -C: change directory before adding\n\n# Examples\n\n```\n## Create tgz\ntar -czvf archive.tgz source_file\n\n## Create tar.gz \ntar -cvzf archive.tar.gz source_file\n\n## Open a tar\ntar -xvf yourfile.tar\n\n## Open a bz2 file\ntar -vxjf mm_binary.tar.bz2\n\n## Open a tar.gz\ntar -xvzf archive.tar.gz \n```\n","n":0.11}}},{"i":30,"$":{"0":{"v":"Ssh","n":1},"1":{"v":"\n# SSH\n\n## No host checking and suppress SSH messages\n```sh\nssh -qo \"StrictHostKeyChecking no\" ${TMUXHOST}\n```\n\n## Copying SSH key to remote-host\n```sh\nssh-copy-id user@remote-host\n```\n\n## Copying SSH key to remote-host (Powershell one-liner)\n```sh\ntype $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh {IP-ADDRESS-OR-FQDN} \"cat >> .ssh/authorized_keys\"\n```\n## Bad owner or permission on c:\\\\Users\\\\user/.ssh/config (domain_name not used)\nYou get this error when you try to ssh in Windows 10 Powershell and the username and device name are the same i.e. jacky is the username, Jacky is name of the computer.\nFixed this by renaming the computer name.\n\n## Generating SSH keys\n### Check for existing keys\n```sh\n## List files in .ssh directory\nls -al ~/.ssh\n\n## Look for filenames such as:\n# - id_rsa.pub\n# - id_ecdsa.pub\n# - id_ed25519.pub\n```\n\n### Generate new SSH key\n```sh\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n\n## For legacy systems that can't run the above, use:\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n\n## Press enter for all prompts, or add a passphrase\n```\n\n### Add SSH key to ssh-agent\n```sh\neval `ssh-agent -s`\n\n## replaced filename with your private keyfile\nssh-add ~/.ssh/id_ed25519\n```\n\n### Add SSH key to GitHub\nCopy contents of public file e.g. `~/.ssh/id_ed25519.pub`\nGo to settings of GitHub and add new ssh key and paste contents.\nSSH key looks like the following:\n`ssh-ed25519 <HASH> <EMAIL_ADDRESS>`\n","n":0.074}}},{"i":31,"$":{"0":{"v":"Ps","n":1},"1":{"v":"\n# Powershell\n\n## List services \n```powershell\nGet-Service\n\n# Don't truncate output\nGet-Service | ft -auto\n```\n## Get Diskspace\n```powershell\nGet-CimInstance -Class CIM_LogicalDisk | Select-Object @{Name=\"Size(GB)\";Expression={$_.size/1gb}}, @{Name=\"Free Space(GB)\";Expression={$_.freespace/1gb}}, @{Name=\"Free (%)\";Expression={\"{0,6:P0}\" -f(($_.freespace/1gb) / ($_.size/1gb))}}, DeviceID, DriveType | Where-Object DriveType -EQ '3'\n```\n\n## Find PID of service\n```Powershell\n$p=Tasklist /svc /fi \"SERVICES eq <NAMW>\" /fo csv | convertfrom-csv\n$p.PID\n```\n\n","n":0.149}}},{"i":32,"$":{"0":{"v":"Iptables","n":1},"1":{"v":"\n# Overview\n- iptables - administration tool for IPv4 packet filtering and NAT\n\n# Synopsis\n```\niptables [-t table] -[AD] chain rule-specification [options]\n```\n\n# Options\n\n## Flags\n- `-t | --table <table>`: This option specifies the packet matching table which the command should operate on.\n\n## Tables\nThe tables are as follows:\n\n`filter`:\nThis is the **default table** (if no `-t` option is passed).\n- INPUT (for packets destined to local sockets)\n- FORWARD (for packets being routed through the box)\n- OUTPUT (for locally-generated packets)\n\n`nat`:\nThis table is consulted when a packet that creates a new connection is encountered.\n- PREROUTING (for altering packets as soon as they come in)\n- OUTPUT (for altering locally-generated packets before routing)\n- POSTROUTING (for altering packets as they are about to go out)\n\n`mangle`:\nThis table is used for specialized packet alteration. Until kernel 2.4.17 it had two built-in chains: \n- PREROUTING (for altering incoming packets before routing)\n- OUTPUT (for altering locally-generated packets before routing). \n\nSince kernel 2.4.18, three other built-in chains are also supported: \n- INPUT (for packets coming into the box itself)\n- FORWARD (for altering packets being routed through the box)\n- POSTROUTING (for altering packets as they are about to go out)\n\n`raw`:\nThis table is used mainly for configuring exemptions from connection tracking in combination with the NOTRACK target. It registers at the netfilter hooks with higher priority and is thus called before ip_conntrack, or any other IP tables.\n- PREROUTING (for packets arriving via any network interface)\n- OUTPUT (for packets generated by local processes)\n\n# Examples\n```sh\n## List Rules\niptables -L --line-numbers\n\n## List Rules in nat table\nsudo iptables -t nat -L -n\n\n## Delete a rule by number\niptables -D [CHAIN NAME] [RULE NUMBER]\n## e.g. Delete 11th rule at the \"FORWARD\" chain.\niptables -D FORWARD 11\n\n## Port forward to another IP\n## TCP\niptables -t nat -I PREROUTING -p tcp -m tcp --dst <node_a> --dport <port_a>[:<port_b>] -j DNAT --to-destination <node_b>:<port_a>[-<port_b>]\niptables -t nat -A POSTROUTING -m tcp -p tcp --dst <node_b> --dport <port_a>[:<port_b>] -j SNAT --to-source <node_a>\n## Not sure if need the below\niptables -A FORWARD -m tcp -p tcp --dst <node_b> --dport <port_a>:<port_b> -j ACCEPT\n## e.g. NodeA (192.168.0.3:31000-31999) -> NodeB (172.20.0.11:31000-31999)\niptables -t nat -I PREROUTING -p tcp -m tcp --dst 192.168.0.3 --dport 31000:31999 -j DNAT --to-destination 172.20.0.11:31000-31999\niptables -t nat -A POSTROUTING -m tcp -p tcp --dst 172.20.0.11 --dport 31000:31999 -j SNAT --to-source 192.168.0.3\niptables -A FORWARD -m tcp -p tcp --dst 172.20.0.11 --dport  31000:31999 -j ACCEPT\n## Another example with masqerade: 3124 -> 1.1.1.1:3000\niptables -t nat -A PREROUTING -p tcp --dport 3124 -j DNAT --to-destination 1.1.1.1:3000\niptables -t nat -A POSTROUTING -j MASQUERADE\n```\n\n# Other Notes\n\n## IP Forwarding\nNAT uses IP forwarding and by default it’s not enabled in the kernel parameters\n\n### Check if IP forwarding is enabled\n```sh\n## CentOS/RHEL\nsysctl net.ipv4.ip_forward\n## Debian:\nsudo sysctl net.ipv4.ip_forward\n## Return: net.ipv4.ip_forward = 0   # where 0 means disabled\nnet.ipv4.ip_forward = 0\n```\n\n### Enable IP forwarding\n```sh\n### To enable IP persistently (survives a reboot):\n## CentOS/RHEL:\necho \"net.ipv4.ip_forward = 1\"|sudo tee /etc/sysctl.d/99-ipforward.conf\n## Debian:\nsudo sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf\n\n### To activate the changes immediately afer making the aboves changes:\n## CentOS/RHEL:\nsudo sysctl -p /etc/sysctl.d/99-ipforward.conf\n## Debian:\nsudo sysctl -p\n```\n","n":0.046}}},{"i":33,"$":{"0":{"v":"Grep","n":1},"1":{"v":"\n# Grep\n\n## Advanced Perl Patterns\n```sh\nExtension         Meaning\n---------         -------\n(?:...)           Cluster-only parentheses, no capturing\n(?#...)           Comment, discard all text between the parens\n(?imsx-imsx)      Enable/disable pattern modifiers\n(?imsx-imsx:...)  Cluster-only parens with modifiers\n(?=...)           Positive lookahead assertion\n(?!...)           Negative lookahead assertion\n(?<=...)          Positive lookbehind assertion\n(?<!...)          Negative lookbehind assertion\n(?()...|...)      Match with if-then-else\n(?()...)          Match with if-then\n(?>...)           Match non-backtracking subpattern (\"once-only\")\n(?R)              Recursive pattern\n```\n\n_Reference:_\nhttps://caspar.bgsu.edu/~courses/Stats/Labs/Handouts/grepadvanced.htm\n","n":0.143}}},{"i":34,"$":{"0":{"v":"Git","n":1},"1":{"v":"\n## Examples\n```sh\ngit clone ssh://git@github.com/<user>/<repository name>.git\n```\n","n":0.447}}},{"i":35,"$":{"0":{"v":"Env","n":1},"1":{"v":"\n# Git Environment\n\n## gitignore file\n- A blank line matches no files, so it can serve as a separator for readability.\n- A line starting with `#` serves as a comment.\n- An optional prefix `!` which negates the pattern; any matching file excluded by a previous pattern will become included again. If a negated pattern matches, this will override lower precedence patterns sources.\n- If the pattern ends with a slash, it is removed for the purpose of the following description, but it would only find a match with a directory. In other words, `foo/` will match a directory `foo` and paths underneath it, but will not match a regular file or a symbolic link `foo` (this is consistent with the way how pathspec works in general in git).\n- If the pattern does not contain a slash `/`, git treats it as a shell glob pattern and checks for a match against the pathname relative to the location of the .gitignore file (relative to the toplevel of the work tree if not from a `.gitignore` file).\n- Otherwise, git treats the pattern as a shell glob suitable for consumption by `fnmatch(3)` with the `FNM_PATHNAME` flag: wildcards in the pattern will not match a `/` in the pathname. For example, `Documentation/*.html` matches `Documentation/git.html` but not `Documentation/ppc/ppc.html` or `tools/perf/Documentation/perf.html`.\nA leading slash matches the beginning of the pathname. For example, `/*.c` matches `cat-file.c` but not `mozilla-sha1/sha1.c`.\n\n### example .gitignore\n```sh\n#OS junk files\n[Tt]humbs.db\n*.DS_Store\n\n#Visual Studio files\n*.[Oo]bj\n*.user\n*.aps\n*.pch\n*.vspscc\n*.vssscc\n*_i.c\n*_p.c\n*.ncb\n*.suo\n*.tlb\n*.tlh\n*.bak\n*.[Cc]ache\n*.ilk\n*.log\n*.lib\n*.sbr\n*.sdf\nipch/\nobj/\n[Bb]in\n[Dd]ebug*/\n[Rr]elease*/\nAnkh.NoLoad\n\n#Tooling\n_ReSharper*/\n*.resharper\n[Tt]est[Rr]esult*\n\n#Project files\n[Bb]uild/\n\n#Subversion files\n.svn\n\n# Office Temp Files\n~$*\n```\n\n\n","n":0.065}}},{"i":36,"$":{"0":{"v":"Find","n":1},"1":{"v":"\n# Find\n\n## Recursively find all files with name\n```sh\nfind target -type f -name \"sys.config\"\n```\n","n":0.277}}},{"i":37,"$":{"0":{"v":"Dig","n":1},"1":{"v":"\n# Overview\n\ndig (domain information groper) is a flexible tool for interrogating DNS name servers. It performs DNS lookups and\ndisplays the answers that are returned from the name server(s) that were queried. Most DNS administrators use dig to\ntroubleshoot DNS problems because of its flexibility, ease of use and clarity of output. Other lookup tools tend to\nhave less functionality than dig.\n\n# Synopsis\n\n```sh\ndig [@server] [-b address] [-c class] [-f filename] [-k filename] [-m] [-p port#] [-q name] [-t type] [-v] [-x addr] [-y [hmac:]name:key] [-4] [-6] [name] [type] [class] [queryopt...]\n```\n\n# Options\n- [no]trace:\n  - dig will act as the recursive nameserver: it  will make iterative queries to nameservers and follow referrals from the root, showing each step along the way\n- [no]short\n- [no]recurse\n    - default: true\n- [no]trace \n    - default: false\n\n\n# Example\n\n```sh\n\ndig google.com\n\n; <> DiG 9.3.3rc2 <> www.google.com\n; (1 server found)\n;; global options: printcmd\n;; Got answer:\n;; ->>HEADER<;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 3, ADDITIONAL: 3\n;; QUESTION SECTION:\n;www.google.com. IN A\n;; ANSWER SECTION:\nhttp://www.google.com/. 43200 IN A 200.99.187.2\n;; AUTHORITY SECTION:\nhttp://www.google.com/. 43200 IN NS ns2.google.com.\nhttp://www.google.com/. 43200 IN NS ns3.google.com.\nhttp://www.google.com/. 43200 IN NS ns1.google.com.\n;; ADDITIONAL SECTION:\nns1.google.com. 43200 IN A 222.54.11.86\nns2.google.com. 43200 IN A 220.225.37.222\nns3.google.com. 43200 IN A 203.199.147.233\n;; Query time: 1 msec\n;; SERVER: 222.54.11.86#53(222.54.11.86)\n;; WHEN: Wed Nov 18 18:31:12 2009\n;; MSG SIZE rcvd: 152\n\n```\n\n### Trace\n\n```sh\ndig +trace kevinslin.com\n\n. NS l.root-servers.net\ncom. NS g.gtld-servers.net\nkevinslin.com NS dns5-name-services.com.\n\n```\n\n\n# Cook\n\n### Specify dns server\n\ndig @8.8.8.8 hostname.com\n\n### Look for name server\n\ndig kevinslin.com NS\n\n\n# FAQ\n\n### How does dig +trace work\n- http://superuser.com/questions/715632/how-does-dig-trace-actually-work\n- series of dig +norecurse calls \n\n","n":0.064}}},{"i":38,"$":{"0":{"v":"Curl","n":1},"1":{"v":"\n# Overview\n- command line url reference\n\n# Synopsis\n```\ncurl <url|ip>:[port]\n```\n\n# Options\n\n## Request\n\n- -f | --fail: fail silently on server error\n\n- -A | --user-agent <agent string>\n    eg: \"Mozilla/4.0\"\n\n- -c | --cookie-jar <filename>\n    - where to keep the cookie jar\n    \n- -H | --header <header>\n    - set custom headers. This option can be invoked multiple times\n\n- -L | --location\n    Follow relocation headers\n\n- -: | --location\n    Follow 300 redirects\n\n- -X | --request <cmd>\n    - what type of request to send\n\n- --referer: where did request come from\n    eg: --referer http://curl.haxx.se http://daniel.haxx.se\n\n- --no-sesionid\n    No cache\n        - G|--get\n\n- --keepalive-time <seconds>\n    - how long connection is idle before sending keepalive probe\n    - @default: 60s\n\n- -d | --data <data>\n    Data to attach to the request\n    - send details with application/x-www-form-urlencoded. header\n\n- -data-urlencode <data>\n    Encodes data before sending it\n\n- -F | --form <name=content>\n    Post request\n    - multipart/form-data\n        eg.\n            -F \"name=daniel;type=text/foo\"\n\n## Security\n- -k | --insecure\n    Allows insecure SSL connection\n\n- --crlfile: provide PEM file\n    eg: --crlfile mycert.pem https://that.secure.server.com\n\n- -u | --user <user:password>\n    - user/password for auth\n    - default: auth is basic-auth\n\n\n## Output\n\n- -# | --progress-bar\n    Show progress\n\n- -I | --head\n    only fetch headers\n\n- -i | --include\n    - include http header in output\n\n- -o | --output <file>\n    Write to output\n\n- -s | --silent\n    No progress\n\n- -w | --write-out <format> : what to write after successful request\n    time_<...>: time in seconds\n\n- -S: show error message if fail\n\n- --trace-ascii: store log of requests\n\n# Examples\n\n```sh\n# get\ncurl http://miigroups.com/forms?name=\"kevin\"&press=\"OK\"\ncurl http://www.weridserver.com:8000/-> get website using port 8000\n\n# post\n# will use content type: application/x-www.form-urlencoded\ncurl --data \"name=kevin\" http://www.miigroups.com/form\ncurl --data-urlencode \"name=kevin\" http://www.miigroups.com/form\ncurl --data \"param1=value1&param2=value2\" https://example.com/resource.cgi\n\n# urlencode a string\ndate | curl -Gso /dev/null -w %{url_effective} --data-urlencode @- \"\" | sed -E 's/..(.*).../\\1/'\n```\n","n":0.061}}},{"i":39,"$":{"0":{"v":"Column","n":1},"1":{"v":"\n# Column\nUseful for tablulating data and padding whitespace between columns\n\n## Flags\n- -s, takes a separator to split the columns\n- -t, creates a table (pretty prints columns with padded whitespace)\n\n## Examples\n```sh\ncat file.csv | column -ts,\n```\n","n":0.171}}},{"i":40,"$":{"0":{"v":"Cmd","n":1},"1":{"v":"\n# Commands to use in Windows CMD\n\n\n## curl\n```\ncurl.exe -v <host>:<port>\n# e.g. \ncurl.exe -v www.google.com\n```\n","n":0.267}}},{"i":41,"$":{"0":{"v":"Chkconfig","n":1},"1":{"v":"\n# chkconfig\nUsed to autostart services on startup of linux servers\n\n```sh\nchkconfig --list collectd\nchkconfig --add collectd\nchkconfig collectd on\n\n## for centos 7\nsystemctl is-enabled collectd\nsystemctl enable collectd\n```\n","n":0.209}}},{"i":42,"$":{"0":{"v":"Awk","n":1},"1":{"v":"\n# AWK\n\n## Sum up lines\n```sh\nawk '{ sum += $NF } END { if (NR > 0) print sum }'\n```\n\n## Sort by line length\n```sh\nawk '{ print length, $0 }' | sort -n -s | cut -d\" \" -f2-\n```\n\n## print line length\n```sh\nawk '{ print length }'\n```\n\n## Average of lines\n```sh\nawk '{ sum += $1; n++ } END { if (n > 0) print sum / n; }'\n```\n","n":0.125}}},{"i":43,"$":{"0":{"v":"App","n":1}}},{"i":44,"$":{"0":{"v":"Wireguard","n":1},"1":{"v":"\n# Wireguard\n\n## Possible pre-req\nAfter getting a vague error which said `Kernel headers not available, sleeping now`, the following possible solution is below\n```sh\n## Not sure if the below fixed it or not but this was run first\nsudo apt install --reinstall libraspberrypi0 libraspberrypi-{bin,dev,doc} raspberrypi-bootloader raspberrypi-kernel\n\n## Running the below and restarting fixed the issue \nsudo apt update && sudo apt upgrade -y\n\n```\n\n## Running with Docker\n```sh\ndocker run -d \\\n--name=wireguard \\\n--cap-add=NET_ADMIN \\\n--cap-add=SYS_MODULE \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-e TZ=[YOURTZ] \\\n-e SERVERURL=[YOURIP] \\\n-e SERVERPORT=51820 \\\n-e PEERS=[PEERS] \\\n-e PEERDNS=auto \\\n-e INTERNAL_SUBNET=10.13.13.0 \\\n-p 51820:51820/udp \\\n-v [VOLUME]:/config \\\n-v /lib/modules:/lib/modules \\\n--restart unless-stopped \\\nlinuxserver/wireguard\n\n## e.g.\n\ndocker run -d \\\n--name=wireguard \\\n--cap-add=NET_ADMIN \\\n--cap-add=SYS_MODULE \\\n-e PUID=1000 \\\n-e PGID=1000 \\\n-e TZ=Europe/London \\\n-e SERVERURL=xujunjie-pi.hopto.org \\\n-e SERVERPORT=51820 \\\n-e PEERS=3 \\\n-e PEERDNS=192.168.208.102 \\\n-e INTERNAL_SUBNET=10.13.13.0 \\\n-p 51820:51820/udp \\\n-v /usr/local/docker_apps/wireguard/config:/config \\\n-v /lib/modules:/lib/modules \\\n--restart unless-stopped \\\nlinuxserver/wireguard\n```\n\n## Output\nAfter you execute the docker run command, the container will install the required kernel headers for your operating system to be able to effectively run Wireguard. Depending on your system this process could take a few minutes.\n\nAfter the container setup process is completed, the terminal will display QR codes. Do not close your window, you will need to scan these QR codes later. You can scan these QR codes with the mobile applications to instantly create the Wireguard profile on your mobile devices. The QR codes are the easiest and quickest way to get Wireguard up and running on your mobile devices.\n\n## MTU fixes\n```sh\n## Add the below to the PostUp section of the server config\niptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu\n\n## Add the below to the PostDown section of the server config\niptables -D FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu\n```\n_Reference: https://keremerkan.net/posts/wireguard-mtu-fixes/_\n\n\n## References\n_https://codeopolis.com/posts/installing-wireguard-in-docker/_\n_https://github.com/linuxserver/docker-wireguard_\n","n":0.061}}},{"i":45,"$":{"0":{"v":"Tautulli","n":1},"1":{"v":"\n# Tautulli\n\n## Running using Docker\n```sh\ndocker run -d \\\n  --name=tautulli \\\n  --restart=unless-stopped \\\n  -v <path to data>:/config \\\n  -e PUID=<uid> \\\n  -e PGID=<gid> \\\n  -e TZ=<timezone> \\\n  -p 8181:8181 \\\n  tautulli/tautulli\n\n## e.g.\n\ndocker run -d \\\n  --name=tautulli \\\n  --restart=unless-stopped \\\n  -v /usr/local/docker_apps/tautulli/config:/config \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Europe/London \\\n  -p 8181:8181 \\\n  tautulli/tautulli\n```\n## Updating with docker\n- Stop the Tautulli container: `docker stop tautulli`\n- Remove the Tautulli container: `docker rm tautulli`\n- Pull the latest update `docker pull tautulli/tautulli`\n- Run the Tautulli container with the same parameters as before: `docker run -d ...`\n","n":0.104}}},{"i":46,"$":{"0":{"v":"Portainer","n":1},"1":{"v":"\n# Portainer\n\n## Runing in Docker\n```sh\n## Create a volume\ndocker volume create portainer_data\n\n## Install and run in portainer\ndocker run -d \\\n-p 8000:8000 \\\n-p 9000:9000 \\\n--name=portainer \\\n--restart=always \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v portainer_data:/data \\\nportainer/portainer\n\n## Install and run portainer agent (can then use portainer to connect to the agent)\ndocker run -d \\\n-p 9001:9001 \\\n--name portainer_agent \\\n--restart=always \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v portainer_agent_data:/var/lib/docker/volumes \\\nportainer/agent:latest\n\n## Now that your new Portainer container is up and running, you can access it at http://dockerhostip:9000.\n\n\n```\n","n":0.119}}},{"i":47,"$":{"0":{"v":"Plexmediaserver","n":1},"1":{"v":"\n# Plexmediaserver\n\n## $PLEX_HOME Location\n/var/lib/plexmediaserver/\n\n## Move the installation\nSteps work for linux Plex Media Server (**PMS**), see reference for other OS.\n1. Disable emptying of trash on **source PMS**\n  1.1 disabe `Settings > Library > Empty trash automatically after every scan` preference for server\n2. Install **PMS** on the **destination** server\n3. Sign out and stop the **destination PMS**, sign out using `settings > server > general`\n4. Copy Server Data from **source PMS**\n  4.1 stop the plex server\n  4.2 data is stored at `/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/`\n  4.3 compress the files by using `tar`, then copy to **destination PMS**, \n5. Copy additional settings - **\\*Not needed for linux, as done in previous step\\***\n6. Make sure the copied files are owned by `plex:plex`\n7. Reboot the **destination PMS** server\n8. Start the **destination PMS** application\n9. Open Plex Web App **(PWA)**\n10. Sign Out and Back into the Server\n11. Edit your libraries, \n  11.1 edit library and add appropriate folder for where content is located on the **destination PMS**\n12. Scan the library, click on `Scan Library Files` on the Plex Media App\n13. Remove old content location, when you can verify that all of your content is working\n14. Final Maintenance\n  14.1 Turn `Empty trash automatically after every scan` in the **PWA**\n  14.2 `Empty Trash` on the **PWA**\n  14.3 `Clean Bundles` on the **PWA**, wait couple of minutes after dialog exits\n  14.4 `Optimize Database` on the **PWA**\n\n_Reference: https://support.plex.tv/articles/201370363-move-an-install-to-another-system/_\n\n## Repair a Corrupt Database\nFollow the steps in the reference to fix issues with media getting stuck in the 'Continue Watching' section despite being marked as unplayed.\n\n_Reference: [Plex:Repair a Corrupt Database](https://support.plex.tv/articles/201100678-repair-a-corrupt-database/?_ga=2.121149832.1231479726.1601827334-1128507795.1600200934)_\n\n\n## Docker install\n```sh\ndocker run -d \\\n  --name=plex \\\n  --net=host \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e VERSION=docker \\\n  -v /usr/local/docker_apps/plex/config:/config \\\n  -v /media/usb1:/media \\\n  --restart unless-stopped \\\n  linuxserver/plex:arm32v7-latest\n```\n\n### Support\n```sh\n## Shell access whilst the container is running:\ndocker exec -it plex /bin/bash\n\n## To monitor the logs of the container in realtime:\ndocker logs -f plex\n\n## Container version number\ndocker inspect -f '{{ index .Config.Labels \"build_version\" }}' plex\n\n## Image version number\ndocker inspect -f '{{ index .Config.Labels \"build_version\" }}' linuxserver/plex:arm32v7-latest\n```\n\n### Error update libseccomp2\n`libc++abi: terminating with uncaught exception of type std::__2::system_error: clock_gettime(CLOCK_MONOTONIC) failed: Operation not permitted`\n\nAdd the backports repo for DebianBuster:\n```bash\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 04EE7237B7D453EC 648ACFD622F3D138\necho \"deb http://deb.debian.org/debian buster-backports main\" | sudo tee -a /etc/apt/sources.list.d/buster-backports.list\nsudo apt update\nsudo apt install -t buster-backports libseccomp2\n```\n","n":0.052}}},{"i":48,"$":{"0":{"v":"Pihole","n":1},"1":{"v":"\n# PiHole\n\n## Running in Docker\n```sh\n## Create persistent volumes\ndocker volume create pihole\ndocker volume create dnsmasq\n\n## Pull the armv7 build (https://hub.docker.com/layers/pihole/pihole/latest/images/sha256-6f8e902adb26cf10220763d1ab027b0b2c64e2df3a397e4f015ead7a1c40d96c?context=explore) - doing this as --platform linux/arm/v7 could not find image, despite it being on DockerHub\ndocker pull pihole/pihole@sha256:6f8e902adb26cf10220763d1ab027b0b2c64e2df3a397e4f015ead7a1c40d96c\n\n## Docker tag \ndocker tag 1b529812cd4b pihole/pihole:armv7\n\n## Run pihole\ndocker run -d \\\n--name=pihole \\\n-e TZ=Europe/London \\\n-e WEBPASSWORD=YOURPASS \\\n-e ServerIP=YOUR.SERVER.IP \\\n-v pihole:/etc/pihole \\\n-v dnsmasq:/etc/dnsmasq.d \\\n-p 80:80 \\\n-p 192.168.208.102:53:53/tcp \\\n-p 192.168.208.102:53:53/udp \\\n--restart=unless-stopped \\\npihole/pihole:armv7\n\n## e.g.\n\ndocker run -d \\\n--name=pihole \\\n-e TZ=Europe/London \\\n-e WEBPASSWORD=change_this_password \\\n-e ServerIP=192.168.208.102 \\\n-v pihole:/etc/pihole \\\n-v dnsmasq:/etc/dnsmasq.d \\\n-p 80:80 \\\n-p 192.168.208.102:53:53/tcp \\\n-p 192.168.208.102:53:53/udp \\\n--restart=unless-stopped \\\npihole/pihole:armv7\n```\n\n## Solve DNS resolution in other containers when using PiHole in Docker\nFound that when using wireguard in docker on the the same docker host as pihole.\nwireguard could not correctly use pihole.\nThis is solved in the the following link:\n_https://discourse.pi-hole.net/t/solve-dns-resolution-in-other-containers-when-using-docker-pihole/31413/2_\n\n## Adding custom DNS entries\nWrite a file ending in `.conf` in the dnsmasq folder - defautls to `/etc/dnsmasq.d`\nThe file should have the following syntax:\n```sh\nhost-record=mydomain.duckdns.org,192.168.1.10\naddress=/printer.lan/192.168.2.9\n```\nAfter making changes, run th follwing to restart the pihole dns\n`pihole restartdns`\n\n## Whitelist the following on this URL\n_https://discourse.pi-hole.net/t/commonly-whitelisted-domains/212_\n\n## Blacklist the following (optional)\nBased on `/u/AtariDump` reddit comment https://www.reddit.com/r/pihole/comments/jtr6eb/default_adlists/\n`/u/Wally3K` https://firebog.net/\n`/u/LightSwitch05` https://www.github.developerdan.com/hosts/\nRegex list: https://github.com/mmotti/pihole-regex/blob/master/regex.list\n\n\n## Seeing lots of queries for lb._dns-sd._udp.<IP_ADDRESS>.in-addr.arpa\n_https://github.com/pi-hole/pi-hole/issues/2654_\n","n":0.074}}},{"i":49,"$":{"0":{"v":"Luci","n":1},"1":{"v":"\n# LuCI\nOpenWRT router\n\n","n":0.577}}},{"i":50,"$":{"0":{"v":"Kitana","n":1},"1":{"v":"\n# Kitana\nKitana is used for plex plugins\n\n\n## install with Docker\n```sh\ndocker run --name kitana --restart unless-stopped -v kitana_data:/usr/local/docker_apps/kitana -d -p 0.0.0.0:31337:31337 pannal/kitana:latest -B 0.0.0.0:31337\n```\n","n":0.209}}},{"i":51,"$":{"0":{"v":"Grocy","n":1},"1":{"v":"\n# Grocy\n\n```sh\ndocker run -d \\\n  --name=grocy \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Europe/London \\\n  -p 9283:80 \\\n  -v /usr/local/docker_apps/grocy/config:/config \\\n  --restart unless-stopped \\\n  lscr.io/linuxserver/grocy:arm32v7-latest\n```\n\nFixed libseccomp following https://docs.linuxserver.io/faq#libseccomp\n","n":0.186}}},{"i":52,"$":{"0":{"v":"Dendron","n":1},"1":{"v":"\n# Dendron \n\n## Line wrap for code blocks\n* Don't think this is required any more\n`F1 => Markdown Preview Enhanced : Customize CSS`\nAdd in the `style.less`:\n```less\n.markdown-preview.markdown-preview {\n       pre, code {\n            white-space: pre-wrap;\n       }\n}\n```\n\n## Self Contained Vaults\n* [[Reference | https://wiki.dendron.so/notes/o4i7a81j778jyh7wql0nacb/]]\n* [[Migrating to Self Contained Vaults | https://wiki.dendron.so/notes/aikv0yamnfkcowlol7qeldy/]]\n### Features\n* Self contained vaults include all the files Dendron needs to open the vault and use it\n* You can publish any vault you have by itself\n* You can share the vault with someone, and Dendron will work immediately when they open it in VSCode without having to set up workspaces\n* When you convert your vault to a remote vault, it will include all your settings and everything you need for Dendron\n","n":0.093}}}]}
