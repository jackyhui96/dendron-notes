{"pageProps":{"note":{"id":"14c34d7c-644d-4cb8-9df3-d94cefa8fa74","title":"Syntax","desc":"","updated":1611141607481,"created":1609935081566,"custom":{},"fname":"lang.erlang.syntax","type":"note","vault":{"fsPath":".","name":"vault","selfContained":true},"contentHash":"16a306b8e1ebc476dd41153651b9ce6c","links":[],"anchors":{"syntax":{"type":"header","text":"Syntax","value":"syntax","line":8,"column":0,"depth":1},"modules":{"type":"header","text":"Modules","value":"modules","line":10,"column":0,"depth":2},"processes-and-signal":{"type":"header","text":"Processes and Signal","value":"processes-and-signal","line":206,"column":0,"depth":2},"behaviours":{"type":"header","text":"Behaviours","value":"behaviours","line":264,"column":0,"depth":2}},"children":[],"parent":"8af8ad5e-138c-4471-b670-3d3474d07401","data":{}},"body":"<h1 id=\"syntax\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#syntax\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Syntax</h1>\n<h1 id=\"syntax-1\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#syntax-1\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Syntax</h1>\n<h2 id=\"modules\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#modules\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Modules</h2>\n<pre class=\"language-erlang\"><code class=\"language-erlang\"><span class=\"token comment\">%%% This is a module-level comment</span>\n<span class=\"token comment\">%%% @doc This tag includes officiel EDoc documentation.</span>\n<span class=\"token comment\">%%% It can be useful for people to consule</span>\n<span class=\"token comment\">%%% @end</span>\n<span class=\"token comment\">%%% Generate documentation with rebar3 edoc</span>\n\n<span class=\"token comment\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span>\n<span class=\"token comment\">%%% Let's start with Module Attributes %%%</span>\n<span class=\"token comment\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span>\n\n<span class=\"token comment\">%% This is an attribute or function-specific comment</span>\n<span class=\"token comment\">%% attributes start with a `-', functions with letters.</span>\n<span class=\"token comment\">%% This file should be saved as `sample.erl'</span>\n<span class=\"token operator\">-</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token atom\">sample</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Functions are described in the form Name/Arity, and must</span>\n<span class=\"token comment\">%% be exported through an `-export([...]).' module attribute</span>\n<span class=\"token operator\">-</span><span class=\"token function\">export</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token atom\">f</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">f</span><span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span><span class=\"token function\">export</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token atom\">x</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>         <span class=\"token comment\">% multiple export attributes can exist</span>\n\n<span class=\"token comment\">%% You can \"import\" functions from another module, but</span>\n<span class=\"token comment\">%% for clarity's sake (and because there's no namespaces)</span>\n<span class=\"token comment\">%% nobody really does that</span>\n<span class=\"token operator\">-</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token atom\">module</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token atom\">y</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% .hrl files contain headers, and are imported directly</span>\n<span class=\"token comment\">%% within the module.</span>\n<span class=\"token comment\">%% The following includes a private header file from src/</span>\n<span class=\"token comment\">%% or a public header file from include/ in the current app</span>\n<span class=\"token operator\">-</span><span class=\"token function\">include</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"some_file.hrl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">%% The following includes a public header file from the</span>\n<span class=\"token comment\">%% include/ file of another application</span>\n<span class=\"token operator\">-</span><span class=\"token function\">include_lib</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"appname/include/some_file.hrl\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% specify an interface you implement:</span>\n<span class=\"token operator\">-</span><span class=\"token function\">behaviour</span><span class=\"token punctuation\">(</span><span class=\"token atom\">gen_server</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Define a record (a tuple that compilers handles in a</span>\n<span class=\"token comment\">%% special way)</span>\n<span class=\"token operator\">-</span><span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token atom\">struct</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token atom\">key</span> <span class=\"token operator\">=</span> <span class=\"token atom\">default</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span> <span class=\"token function\">term</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t <span class=\"token atom\">other_key</span>     <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span> <span class=\"token atom\">undefined</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">integer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Just C-style macros</span>\n<span class=\"token operator\">-</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token variable\">VALUE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>        <span class=\"token comment\">% ?VALUE in this module becomes `42'</span>\n<span class=\"token operator\">-</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token variable\">SQUARE</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token operator\">*</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">% function macro</span>\n<span class=\"token operator\">-</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token variable\">DBG</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Call</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>         <span class=\"token comment\">% a fancy debug macro: ?DBG(2 + 2)</span>\n\t<span class=\"token atom\">io</span><span class=\"token punctuation\">:</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DBG: ~s (~p): ~p~n\"</span><span class=\"token punctuation\">,</span>\n\t\t  <span class=\"token punctuation\">[</span>?<span class=\"token variable\">?Call</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">?MODULE</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">?LINE</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Call</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Conditionals</span>\n<span class=\"token operator\">-</span><span class=\"token function\">ifdef</span><span class=\"token punctuation\">(</span><span class=\"token variable\">MACRO_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>        <span class=\"token comment\">% opposite: -ifndef(MACRO_NAME).</span>\n<span class=\"token operator\">-</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token variable\">OTHER_MACRO</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">ok</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span><span class=\"token atom\">else</span><span class=\"token punctuation\">.</span>                     <span class=\"token comment\">% other option: -elif(NAME).</span>\n<span class=\"token operator\">-</span><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token variable\">MACRO_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">ok</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span><span class=\"token atom\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Type definitions</span>\n<span class=\"token operator\">-</span><span class=\"token atom\">type</span> <span class=\"token function\">my_type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span> <span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span><span class=\"token atom\">type</span> <span class=\"token function\">my_container</span><span class=\"token punctuation\">(</span><span class=\"token variable\">T</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token variable\">T</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">T</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">my_type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">mod</span><span class=\"token punctuation\">:</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">-</span><span class=\"token function\">export_type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token atom\">my_type</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">my_container</span><span class=\"token operator\">/</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% you can also define custom attributes:</span>\n<span class=\"token operator\">-</span><span class=\"token function\">my_attribute</span><span class=\"token punctuation\">(</span><span class=\"token atom\">hello_there</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span><span class=\"token function\">author</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Duke Erlington\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span>\n<span class=\"token comment\">%%% And now modules for code and functions %%%</span>\n<span class=\"token comment\">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span>\n\n<span class=\"token comment\">%% @doc A function with 0 arguments returning an atom</span>\n<span class=\"token operator\">-</span><span class=\"token atom\">spec</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token function\">term</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">% optional spec</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">ok</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">-</span><span class=\"token atom\">spec</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token function\">number</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token function\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token variable\">N</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token variable\">N</span> <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Pattern matching with clauses</span>\n<span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">% base recursive clause for a list</span>\n<span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token variable\">_H</span><span class=\"token punctuation\">|</span><span class=\"token variable\">T</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token atom\">x</span> <span class=\"token punctuation\">|</span> <span class=\"token variable\">T</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">% replace list element with `x' atom</span>\n\n<span class=\"token comment\">%% @private variable binding rules</span>\n<span class=\"token function\">same_list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">_</span><span class=\"token punctuation\">|</span><span class=\"token variable\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">same_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">same_list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">_</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">_</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Operators in the language</span>\n<span class=\"token function\">operators</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">+</span><span class=\"token variable\">X</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">% unary</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">+</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">-</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">*</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">/</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\">% any numbers</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">div</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">rem</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span>             <span class=\"token comment\">% integers-only</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">band</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">bor</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">bxor</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">% binary operators</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">bsl</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">bsr</span> <span class=\"token variable\">L</span><span class=\"token punctuation\">,</span>             <span class=\"token comment\">% bit shifting</span>\n    <span class=\"token operator\">not</span> <span class=\"token variable\">X</span><span class=\"token punctuation\">,</span>                        <span class=\"token comment\">% boolean not</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">andalso</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">orelse</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">% shortcircuit boolean operators</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">></span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">>=</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">=</span><span class=\"token operator\">&#x3C;</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">% comparison</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">==</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">/=</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span>               <span class=\"token comment\">% equality (float == int)</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">=:=</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">=/=</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span>             <span class=\"token comment\">% strict equality (float =/= int)</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">++</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">--</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">,</span>               <span class=\"token comment\">% append Y to X, delete Y from X</span>\n    <span class=\"token variable\">X</span> <span class=\"token operator\">!</span> <span class=\"token variable\">Y</span><span class=\"token punctuation\">.</span>                        <span class=\"token comment\">% send message Y to process X</span>\n\n<span class=\"token comment\">%% Using guards. Valid guard expressions at:</span>\n<span class=\"token comment\">%% erlang.org/doc/reference_manual/expressions.html#guard-sequences</span>\n<span class=\"token function\">comfortable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token atom\">celsius</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">when</span> <span class=\"token variable\">X</span> <span class=\"token operator\">>=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">=</span><span class=\"token operator\">&#x3C;</span> <span class=\"token number\">26</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token comment\">% AND clauses</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">comfortable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token atom\">celsius</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">_</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token function\">incomfortable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token atom\">celsius</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">when</span> <span class=\"token variable\">X</span> <span class=\"token operator\">=</span><span class=\"token operator\">&#x3C;</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">X</span> <span class=\"token operator\">>=</span> <span class=\"token number\">26</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token comment\">% OR clauses</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">incomfortable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token atom\">celsius</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">_</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token boolean\">false</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% difference with 'andalso' and 'orelse'</span>\n<span class=\"token function\">conds</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">when</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_number</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">orelse</span> <span class=\"token function\">is_integer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t       <span class=\"token operator\">andalso</span> <span class=\"token variable\">X</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">9</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token comment\">%% equivalent (A AND B) OR C</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">conds</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">when</span> <span class=\"token function\">is_number</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">is_integer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">9</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token comment\">%% - parentheses impossible with , or ;</span>\n    <span class=\"token comment\">%% - equivalent to A OR (B AND C)</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">conds</span><span class=\"token punctuation\">(</span><span class=\"token variable\">T</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">when</span> <span class=\"token function\">element</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token atom\">celsius</span><span class=\"token punctuation\">;</span> <span class=\"token function\">is_integer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token comment\">%% element/2 extracts an element from a tuple. If `T' is</span>\n    <span class=\"token comment\">%% not a tuple, the call fails and `is_integer/1' is tried</span>\n    <span class=\"token comment\">%% instead</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">conds</span><span class=\"token punctuation\">(</span><span class=\"token variable\">T</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">when</span> <span class=\"token function\">element</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token atom\">celsius</span> <span class=\"token operator\">orelse</span> <span class=\"token function\">is_integer</span><span class=\"token punctuation\">(</span><span class=\"token variable\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token comment\">%% this can never work: if element/2 fails, the whole</span>\n    <span class=\"token comment\">%% `orlese' expressoin fails and `is_integer/1' is skipped</span>\n    <span class=\"token boolean\">true</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Conditionals</span>\n<span class=\"token function\">conditional</span><span class=\"token punctuation\">(</span><span class=\"token quoted-atom atom\">'if'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Light</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token keyword\">if</span> <span class=\"token variable\">Light</span> <span class=\"token operator\">==</span> <span class=\"token atom\">red</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">stop</span><span class=\"token punctuation\">;</span>\n       <span class=\"token variable\">Light</span> <span class=\"token operator\">==</span> <span class=\"token atom\">green</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">Light</span> <span class=\"token operator\">==</span> <span class=\"token atom\">yellow</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">go_fast</span><span class=\"token punctuation\">;</span>\n       <span class=\"token boolean\">true</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">burnout</span> <span class=\"token comment\">% else clause!</span>\n    <span class=\"token keyword\">end</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">conditional</span><span class=\"token punctuation\">(</span><span class=\"token quoted-atom atom\">'case'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">Light</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">IsLate</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token keyword\">case</span> <span class=\"token variable\">Light</span> <span class=\"token keyword\">of</span>\n\t<span class=\"token atom\">green</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">go</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token atom\">yellow</span> <span class=\"token keyword\">when</span> <span class=\"token variable\">IsLate</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">go_fast</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">_</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">stop</span>\n    <span class=\"token keyword\">end</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">conditional</span><span class=\"token punctuation\">(</span><span class=\"token atom\">pattern</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">green</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">go</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">conditional</span><span class=\"token punctuation\">(</span><span class=\"token atom\">pattern</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">yellow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">slow</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">conditional</span><span class=\"token punctuation\">(</span><span class=\"token atom\">pattern</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">red</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">stop</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% List and binary comprehensions</span>\n<span class=\"token function\">comp</span><span class=\"token punctuation\">(</span><span class=\"token variable\">ListA</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">ListB</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">[</span><span class=\"token variable\">X</span><span class=\"token operator\">*</span><span class=\"token variable\">X</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> <span class=\"token variable\">X</span> <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">-</span> <span class=\"token variable\">ListA</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">rem</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">% square even numbers</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token variable\">X</span><span class=\"token punctuation\">,</span><span class=\"token variable\">Y</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> <span class=\"token variable\">X</span> <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">-</span> <span class=\"token variable\">ListA</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Y</span> <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">-</span> <span class=\"token variable\">ListB</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">% all possible pairs</span>\n    <span class=\"token punctuation\">&#x3C;&#x3C;</span> <span class=\"token punctuation\">&#x3C;&#x3C;</span><span class=\"token variable\">X</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">>></span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> <span class=\"token variable\">X</span> <span class=\"token operator\">&#x3C;</span><span class=\"token operator\">-</span> <span class=\"token variable\">ListA</span> <span class=\"token punctuation\">>></span><span class=\"token punctuation\">.</span>       <span class=\"token comment\">% turn list into bytes</span>\n<span class=\"token function\">comp</span><span class=\"token punctuation\">(</span><span class=\"token variable\">BinA</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">BinB</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token comment\">% now with binaries</span>\n    <span class=\"token punctuation\">&#x3C;&#x3C;</span> <span class=\"token punctuation\">&#x3C;&#x3C;</span><span class=\"token variable\">X</span><span class=\"token operator\">*</span><span class=\"token variable\">X</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">>></span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> <span class=\"token punctuation\">&#x3C;&#x3C;</span><span class=\"token variable\">X</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">>></span> <span class=\"token operator\">&#x3C;=</span> <span class=\"token variable\">Bin</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">X</span> <span class=\"token operator\">rem</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">>></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span><span class=\"token variable\">X</span><span class=\"token punctuation\">,</span><span class=\"token variable\">Y</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> <span class=\"token punctuation\">&#x3C;&#x3C;</span><span class=\"token variable\">X</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">>></span> <span class=\"token operator\">&#x3C;=</span> <span class=\"token variable\">BinA</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#x3C;&#x3C;</span><span class=\"token variable\">Y</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">>></span> <span class=\"token operator\">&#x3C;=</span> <span class=\"token variable\">BinB</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token variable\">X</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> <span class=\"token punctuation\">&#x3C;&#x3C;</span><span class=\"token variable\">X</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">>></span> <span class=\"token operator\">&#x3C;=</span> <span class=\"token variable\">BinA</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">%% Anonymous and higher order functions</span>\n<span class=\"token function\">higher_order</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token variable\">If</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">fun</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Light</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token function\">conditional</span><span class=\"token punctuation\">(</span><span class=\"token quoted-atom atom\">'if'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Light</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">Case</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">fun</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Light</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token function\">conditional</span><span class=\"token punctuation\">(</span><span class=\"token quoted-atom atom\">'case'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token variable\">Light</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n    <span class=\"token atom\">lists</span><span class=\"token punctuation\">:</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token variable\">If</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token atom\">green</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">yellow</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">red</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token atom\">lists</span><span class=\"token punctuation\">:</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Case</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token atom\">green</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">yellow</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">red</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">If</span><span class=\"token punctuation\">(</span><span class=\"token atom\">red</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">% can be called literally</span>\n    <span class=\"token atom\">lists</span><span class=\"token punctuation\">:</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">fun</span><span class=\"token punctuation\">(</span><span class=\"token variable\">X</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token variable\">X</span><span class=\"token operator\">*</span><span class=\"token variable\">X</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token function\">try_catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    <span class=\"token keyword\">try</span>\n\t<span class=\"token function\">some_call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     <span class=\"token comment\">% exceptions in this call are caught as well</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom\">ok</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">val</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">% common good return value to pattern match</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom\">error</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">reason</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">% common bad return value to pattern match</span>\n\t<span class=\"token comment\">% any of these expression aborts the execution flow</span>\n\t<span class=\"token function\">throw</span><span class=\"token punctuation\">(</span><span class=\"token atom\">reason1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">% non-local returns, internal exceptions</span>\n\t<span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token atom\">reason2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">% unfixable error</span>\n\t<span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token atom\">reason3</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">% the process should terminate</span>\n    <span class=\"token keyword\">of</span>  <span class=\"token comment\">% this section is optional: exceptions here are not caught</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom\">ok</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">V</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n\t    <span class=\"token function\">do_something</span><span class=\"token punctuation\">(</span><span class=\"token variable\">V</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t    <span class=\"token function\">try_catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% safely recurse without blowing stack</span>\n\t<span class=\"token punctuation\">{</span><span class=\"token atom\">error</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">R</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n\t    <span class=\"token punctuation\">{</span><span class=\"token atom\">error</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">R</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">% just return</span>\n    <span class=\"token keyword\">catch</span> <span class=\"token comment\">% this section is optional: various patterns</span>\n\t<span class=\"token atom\">throw</span><span class=\"token punctuation\">:</span><span class=\"token atom\">reason1</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">handled</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token atom\">reason2</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">oops</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% never matches, `throw' is implicit type</span>\n\t<span class=\"token atom\">error</span><span class=\"token punctuation\">:</span><span class=\"token atom\">reason2</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">handled</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token atom\">exit</span><span class=\"token punctuation\">:</span><span class=\"token atom\">reason3</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">handled</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token atom\">throw</span><span class=\"token punctuation\">:</span><span class=\"token variable\">_</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">wildcard_throws</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">E</span><span class=\"token punctuation\">:</span><span class=\"token variable\">R</span> <span class=\"token keyword\">when</span> <span class=\"token function\">is_error</span><span class=\"token punctuation\">(</span><span class=\"token variable\">E</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token atom\">any_error</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">_</span><span class=\"token punctuation\">:</span><span class=\"token variable\">_</span><span class=\"token punctuation\">:</span><span class=\"token variable\">S</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token atom\">stacktrace</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">S</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% extract stacktrace</span>\n    <span class=\"token keyword\">after</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token comment\">% this is an optional 'finally' block</span>\n\t<span class=\"token atom\">finally</span>\n    <span class=\"token keyword\">end</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<h2 id=\"processes-and-signal\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#processes-and-signal\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Processes and Signal</h2>\n<pre class=\"language-erlang\"><code class=\"language-erlang\"><span class=\"token comment\">%% Start a new process</span>\n<span class=\"token variable\">Pid</span> <span class=\"token operator\">=</span> <span class=\"token function\">spawn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token function\">some_loop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Arg</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n<span class=\"token variable\">Pid</span> <span class=\"token operator\">=</span> <span class=\"token function\">spawn</span><span class=\"token punctuation\">(</span><span class=\"token quoted-atom atom\">'name@remote.host'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token function\">some_loop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Arg</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n<span class=\"token variable\">Pid</span> <span class=\"token operator\">=</span> <span class=\"token function\">spawn</span><span class=\"token punctuation\">(</span><span class=\"token atom\">some_module</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">some_loop</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">Arg</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token variable\">Pid</span> <span class=\"token operator\">=</span> <span class=\"token function\">spawn</span><span class=\"token punctuation\">(</span><span class=\"token quoted-atom atom\">'name@remote.host'</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">some_module</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">some_loop</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">Arg</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">%% Spawn a linked process</span>\n<span class=\"token variable\">Pid</span> <span class=\"token operator\">=</span> <span class=\"token function\">spawn_link</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">% 1-4 arguments as with spawn/1-4</span>\n<span class=\"token comment\">%% Spawn a monitored process atomically</span>\n<span class=\"token punctuation\">{</span><span class=\"token variable\">Pid</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Ref</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">spawn_monitor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token function\">some_loop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Arg</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span><span class=\"token variable\">Pid</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Ref</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">spawn_monitor</span><span class=\"token punctuation\">(</span><span class=\"token atom\">some_module</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">some_loop</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">Arg</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">%% Spawn with fancy options</span>\n<span class=\"token function\">spawn_opt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Fun</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Opts</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">spawn_opt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Node</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Fun</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Opts</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">spawn_opt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Mod</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Fun</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Args</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Opts</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">spawn_opt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Node</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Mod</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Fun</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Args</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Opts</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">%% Options must respect the following spec; many are advanced</span>\n<span class=\"token punctuation\">[</span><span class=\"token atom\">link</span> <span class=\"token punctuation\">|</span> <span class=\"token atom\">monitor</span> <span class=\"token punctuation\">|</span>\n <span class=\"token punctuation\">{</span><span class=\"token atom\">priority</span><span class=\"token punctuation\">,</span> <span class=\"token atom\">low</span> <span class=\"token punctuation\">|</span> <span class=\"token atom\">normal</span> <span class=\"token punctuation\">|</span> <span class=\"token atom\">high</span> <span class=\"token punctuation\">|</span> <span class=\"token atom\">max</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span>    <span class=\"token comment\">% don't touch</span>\n <span class=\"token punctuation\">{</span><span class=\"token atom\">fullsweep_after</span><span class=\"token punctuation\">,</span> <span class=\"token function\">integer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span>        <span class=\"token comment\">% full GC</span>\n <span class=\"token punctuation\">{</span><span class=\"token atom\">min_heap_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Words</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span> <span class=\"token function\">integer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span> <span class=\"token comment\">% perf tuning</span>\n <span class=\"token punctuation\">{</span><span class=\"token atom\">min_bin_heap_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Words</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">|</span>\n <span class=\"token punctuation\">{</span><span class=\"token atom\">max_heap_size</span><span class=\"token punctuation\">,</span>                    <span class=\"token comment\">% heap size after which</span>\n   <span class=\"token variable\">Words</span> <span class=\"token punctuation\">|</span>                          <span class=\"token comment\">% the process may be killed. Use</span>\n   <span class=\"token punctuation\">#</span><span class=\"token punctuation\">{</span><span class=\"token atom\">size</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">integer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">% to indirectly set max queue sizes</span>\n     <span class=\"token atom\">kill</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     <span class=\"token atom\">error_logger</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">boolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">%% send an exit signal to a process</span>\n<span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Pid</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Reason</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">%% Receive a message</span>\n<span class=\"token keyword\">receive</span>\n    <span class=\"token variable\">Pattern1</span> <span class=\"token keyword\">when</span> <span class=\"token variable\">OptionalGuard1</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n\t<span class=\"token variable\">Expression1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">Pattern2</span> <span class=\"token keyword\">when</span> <span class=\"token variable\">OptionalGuard2</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span>\n\t<span class=\"token variable\">Expression2</span>\n<span class=\"token keyword\">after</span> <span class=\"token variable\">Milliseconds</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token comment\">% optional</span>\n    <span class=\"token variable\">Expression</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\">%% Naming processes</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">=</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token atom\">atom_name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Pid</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">=</span> <span class=\"token function\">unregister</span><span class=\"token punctuation\">(</span><span class=\"token atom\">atom_name</span><span class=\"token punctuation\">)</span>\n<span class=\"token variable\">Pid</span> <span class=\"token punctuation\">|</span> <span class=\"token atom\">undefined</span> <span class=\"token operator\">=</span> <span class=\"token function\">whereis</span><span class=\"token punctuation\">(</span><span class=\"token atom\">atom_name</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">%% Monitor</span>\n<span class=\"token variable\">Ref</span> <span class=\"token operator\">=</span> <span class=\"token atom\">erlang</span><span class=\"token punctuation\">:</span><span class=\"token function\">monitor</span><span class=\"token punctuation\">(</span><span class=\"token atom\">process</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Pid</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">true</span> <span class=\"token operator\">=</span> <span class=\"token atom\">erlang</span><span class=\"token punctuation\">:</span><span class=\"token function\">demonitor</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Ref</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">true</span> <span class=\"token punctuation\">|</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">=</span> <span class=\"token atom\">erlang</span><span class=\"token punctuation\">:</span><span class=\"token function\">demonitor</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Ref</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token atom\">flush</span> <span class=\"token punctuation\">|</span> <span class=\"token atom\">info</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">%% Links</span>\n<span class=\"token function\">link</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Pid</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Pid</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">process_info</span><span class=\"token punctuation\">(</span><span class=\"token atom\">trap_exit</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">|</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"behaviours\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#behaviours\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Behaviours</h2>","noteIndex":{"id":"root","title":"root","desc":"","updated":1595961348801,"created":1595961348801,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","name":"vault","selfContained":true},"contentHash":"dad9815845eec627c937e34281a065d5","links":[],"anchors":{"root":{"type":"header","text":"Root","value":"root","line":8,"column":0,"depth":1}},"children":["ced683be-fe67-4022-989f-abc6d311cb3a","132fe0fe-fc74-4dbe-982a-9dcac677f664","a44df307-1a67-417b-b733-da109c3be441","b9686e84-d9a1-4dbb-8474-1a9c156d6d12","93a5dc42-8663-4d3c-924f-82e8faa35a67","f80d45a1-bd90-4097-96bc-0301fbc4d937","19992660-3602-4c64-a3a5-e9c05f19ffac","3f157f98-5c61-4479-b311-956d4b0ef67a"],"parent":null,"data":{},"body":"\n# Root\n\nThis is the root fo your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top. \n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":true,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":".","name":"vault","selfContained":true}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"maxPreviewsCached":10,"maxNoteLength":204800,"dendronVersion":"0.87.3","enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"assetsPrefix":"/dendron-notes","copyAssets":true,"siteHierarchies":["root"],"enableSiteLastModified":true,"siteRootDir":"docs","siteUrl":"https://jackyhui96.github.io","enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"writeStubs":false,"seo":{"title":"Dendron Notes","description":"Personal knowledge space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitLab","editBranch":"main","editViewMode":"tree"},"enablePrettyLinks":true,"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}